create or replace    function  crear_cat_persona
(
	in fechanac_fechaconstitucion_ timestamp,
	in origen_ int ,
	in nombre_ varchar(120),
	in apellido_razonsocial_ varchar(125) ,
	in movil_ varchar(35),
	in email_ varchar(35),
	in direccion_ text,
	in registrado_por_ int,
	in fecha_registro_ varchar(12),
	in identificador_ jsonb,
	in num_tipo_colaborador_ int,
	in genero_ varchar(1),
	in estad_civil_ int,
	in imagen_ varchar(500),
	in email_institucional_ varchar(75) ,
	in telefono_institucional_ varchar(75)
)
returns table(
	num  integer,
	nombre varchar(150)
)
    language 'plpgsql'
AS $body$

declare identificador integer = (select case when (select max(num_persona) from cat_persona) is null
			then 1 else (select max(num_persona) from cat_persona)+1 end);


declare identificador_colaborador integer = (select case when (select max(num_colaborador) from cat_colaborador) is null
			then 1 else (select max(num_colaborador) from cat_colaborador)+1 end);
declare cod_colaborador varchar(100) = (SELECT concat('CLB-', identificador_colaborador));
			
declare contador integer :=0;

declare valor integer:=1;

declare identificador_tbl2 integer = 0;

declare valorjson integer:=0;



declare estado_colaborador integer = (select case when (select c.nombre from tbl_historial_cargo_colaborador h 
 	inner join cat_cargo c on h.num_cargo = c.num_cargo
 		where h.num_colaborador = registrado_por_ 
 			and h.num_estado = (select e.num_estado from cat_estado e where e.nombre ='activo')) ='gerente'
			then (select e.num_estado from cat_estado e where e.nombre ='activo')
				else (select e.num_estado from cat_estado e where e.nombre ='en espera de aprobaci√≥n') end);
begin




insert into cat_persona 
(
	num_persona ,
	fechanac_fechaconstitucion,
	origen,
	nombre,
	apellido_razonsocial,
	movil,
	email,
	direccion,
	registrado_por ,
	fecha_registro 
)
values
(
	identificador,
	fechanac_fechaconstitucion_,
	origen_,
	lower(nombre_),
	lower(apellido_razonsocial_),
	movil_,
	email_ ,
	direccion_,
	registrado_por_,
	(select(TO_DATE(fecha_registro_, 'YYYYMMDD')))

	
);

create temp table IF NOT EXISTS  tem_identificador  
	(
		id_  varchar(20),
		id_tipo_identificacion varchar(20),
		identificacion varchar(20)
	);



contador:=(jsonb_array_length(identificador_));



while valor <= contador loop




identificador_tbl2 :=(select case when (select max(num_persona_identificacion) from tbl_persona_identificacion) is null
				then 1 else (select max(num_persona_identificacion) from tbl_persona_identificacion)+1 end);
				


insert into tem_identificador 
(
id_,
id_tipo_identificacion,
identificacion 
)
select identificador_-> valorjson->>'id',
	identificador_-> valorjson->>'num_tipo_identificacion',
	identificador_-> valorjson->>'identificacion';
	
	
insert into tbl_persona_identificacion 
(
	num_persona_identificacion ,
	num_persona ,
	num_tipo_identificacion ,
	identificacion ,
	registrado_por,
	fecha_registro 
)
select identificador_tbl2,
	identificador,
	e.id_tipo_identificacion::integer,
	e.identificacion,
	registrado_por_,
	current_date
	from tem_identificador e where cast (e.id_ AS integer)= valor;
raise notice 'Out addition count %', valor;
valorjson:=valorjson+1;
valor := valor+1;
end loop;

insert into cat_colaborador 
(
	num_colaborador ,
	num_tipo_colaborador ,
	num_persona ,
	num_estado_civil,
	num_estado,
	cod_colaborador ,
	genero ,
	imagen ,
	email_institucional ,
	telefono_institucional ,
	registrado_por ,
	fecha_registro 
)
values
(
	identificador_colaborador,
	num_tipo_colaborador_,
	identificador,
	estad_civil_,
	estado_colaborador,
	cod_colaborador,
	genero_,
	imagen_,
	email_institucional_,
	telefono_institucional_,
	registrado_por_,
	current_date
);



return query  select CE.num_persona,
					 CE.nombre
					 from cat_persona CE where CE.num_persona = identificador limit 1;

end;
$body$;

